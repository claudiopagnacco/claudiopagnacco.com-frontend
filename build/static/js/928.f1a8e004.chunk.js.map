{"version":3,"file":"static/js/928.f1a8e004.chunk.js","mappings":"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","sources":["components/animations/AnimatedPage.js","components/helmet.js","components/library/card.js","pages/Design.js"],"sourcesContent":["import { motion } from \"framer-motion\";\n\nconst animations = {\n  initial: { opacity: 0, y: 25 },\n  animate: { opacity: 1, y: 0 },\n  exit: { opacity: 0, y: 0 },\n};\n\nconst AnimatedPage = ({ children }) => {\n  return (\n    <motion.div className=\"animated\"\n      variants={animations}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      transition={{duration: .3, ease: \"easeInOut\"}}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default AnimatedPage;\n","import { Helmet } from \"react-helmet-async\";\nexport default function HelmetData({ title, description }) {\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport { localhost } from \"../../hooks/config\";\nimport { Webp } from \"../../hooks/config\";\nconst LazyBackground = lazy(() => import(\"../performance/LazyBackground\"));\n\nexport default function Card({ project }) {\n  return (\n    <>\n      <div className=\"Card\">\n        <div className=\"row\">\n          <div className=\"col-12-xs col-9-s col-5-l head\">\n            <Link to={\"/project/\" + project.attributes.slug}>\n              <Suspense>\n                <LazyBackground\n                  className=\"image\"\n                  src={\n                    localhost +\n                    project.attributes.smallCover.data.attributes.url +\n                    Webp()\n                  }\n                  placeholder={\n                    localhost +\n                    project.attributes.smallCover.data.attributes.formats\n                      .thumbnail.url +\n                    Webp()\n                  }\n                  color={project.attributes.darkAccent}\n                />\n              </Suspense>\n            </Link>\n          </div>\n          <div className=\"col-12-xs col-3-s col-3-l body\">\n            <div className=\"details\">\n              <p className=\"duration\">{project.attributes.duration}</p>\n              <h3>{project.attributes.title}</h3>\n              <p className=\"description\">{project.attributes.description}</p>\n              <p className=\"role\"><strong>Role: </strong>{project.attributes.role}</p>\n              <p className=\"tools\"><strong>Tools: </strong>{project.attributes.tools}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { projects_url } from \"../hooks/config\";\n\nimport Card from \"../components/library/card\";\nimport HelmetData from \"../components/helmet\";\nimport AnimatedPage from \"../components/animations/AnimatedPage\";\n\nimport \"./Design.scss\";\n\nfunction Design() {\n  const [projects, setProjects] = useState([]);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    axios\n      .get(projects_url)\n      .then(({ data }) => setProjects(data.data))\n      .catch((error) => setError(error));\n  }, []);\n\n  if (error) {\n    // Print errors if any\n    return <div>An error occured: {error.message}</div>;\n  }\n\n  const listCard = projects.map((project) => {\n    return <Card project={project} key={project.id} />;\n  });\n\n  return (\n    <>\n      <HelmetData\n        title=\"Design\"\n        description=\"Explore my curated collection of projects! Immerse yourself in captivating designs and user-centric experiences. Get inspired and discover the art of UX/UI design at its finest.\"\n      />\n      <AnimatedPage>\n        <div className=\"design-page\">\n          <div className=\"spacer\"></div>\n          <div className=\"spacer\"></div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12-xs col-9-s col-5-l head\">\n                <h2>\n                  Selected Projects <div />\n                </h2>\n                <p>\n                  As a designer, I strive to ensure that design decisions are\n                  the result of a human-centered process. I continuously learn\n                  new tools and stay updated with the latest trends, always\n                  keeping in mind that the user provides the most valuable\n                  insights. I strongly believe that teamwork is the key to\n                  success.\n                </p>\n              </div>\n            </div>\n            {listCard}\n          </div>\n        </div>\n      </AnimatedPage>\n    </>\n  );\n}\n\nexport default Design;\n"],"names":["animations","initial","opacity","y","animate","exit","_ref","children","_jsx","motion","className","variants","transition","duration","ease","HelmetData","title","description","_Fragment","_jsxs","Helmet","name","content","LazyBackground","lazy","Card","project","Link","to","attributes","slug","Suspense","src","localhost","smallCover","data","url","Webp","placeholder","formats","thumbnail","color","darkAccent","role","tools","_useState","useState","_useState2","_slicedToArray","projects","setProjects","_useState3","_useState4","error","setError","useEffect","axios","projects_url","then","catch","message","listCard","map","id","AnimatedPage"],"sourceRoot":""}